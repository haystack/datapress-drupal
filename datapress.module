<?php

error_reporting(E_ALL);
ini_set('display_errors', '1');

function datapress_menu() { 
//  $items['datapress/node/%node/json'] = array(
//    'page callback' => 'datapress_json_endpoint',
//    'page arguments' => array(1),
//    'access arguments' => array('access content'),
//  );
  $items['datapress/node/type/%/json'] = array(
    'page callback' => 'datapress_nodes_by_type',
    'page arguments' => array(3),
    'access arguments' => array('access content'),
  );
  $items['datapress/user/role/%/json'] = array(
    'page callback' => 'datapress_users_by_role',
    'page arguments' => array(3),
    'access arguments' => array('access content'),
  );
  return $items;
}

function datapress_nodes_by_type($type) {
  $ret = array();
  $ret["type"] = $type;
  $ret["items"] = array();
  $query = new EntityFieldQuery();
  $nodes = $query->entityCondition('entity_type', 'node')
                 ->propertyCondition('type', $type)
                 ->propertyCondition('status', 1)
                 ->execute();
  $ret["nodes"] = $nodes;
  if (!empty($nodes["node"])) {
    foreach ($nodes["node"] as $key => $node) {
      $node = node_load($key);
      array_push($ret["items"], datapress_node_export_structure($node));
    }
  }
  drupal_json_output($ret);
}

function datapress_users_by_role($roleName) {
  $ret = array();
  $ret["items"] = array();
  $role = user_role_load_by_name($roleName);
  if ($role) {
    $result = db_select('users_roles', 'ur')
               ->fields('ur', array('uid'))
               ->condition('rid', $role->rid)
               ->execute();
    
    foreach($result as $record) {
      $uids[] = $record->uid;
    }
  
    $query = new EntityFieldQuery();
    $users = $query->entityCondition('entity_type', 'user')
                   ->entityCondition('entity_id', $uids, 'IN')
                   ->propertyCondition('status', 1)
                   ->execute();
  
    if (!empty($users["user"])) {
      foreach ($users["user"] as $key => $user) {
        $user = user_load($key);
        array_push($ret["items"], datapress_user_export_structure($user));
      }
    }
  }
  drupal_json_output($ret);
}

function datapress_node_export_structure($node) {
  $ret = array();
  $ret['id'] = $node->nid;
  $ret['nid'] = $node->nid;
  $ret['type'] = $node->type;
  $ret['label'] = $node->title;
  $ret['title'] = $node->title;
  $ret['creator_picure'] = $node->picture;
  $ret['creator'] = $node->name;
  $ret['created'] = $node->created;
  $ret['body'] = $node->body["und"][0]["value"];
  $ret['summary'] = $node->body["und"][0]["summary"];
  $ret['fullbody'] = $node->body;
  //$ret['all'] = $node;

  $needle = "field_";
  foreach ($node as $key => $value) {
    // StartsWith
    if (!strncmp($key, $needle, strlen($needle))) {
      $dict = datapress_get_custom_field_value($value);
      $prefix = substr($key, 6);
      foreach ($dict as $customk => $customv) {
        $ret["custom-$prefix-$customk"] = $customv;
      }
    }
  }

  return $ret;
}

function datapress_user_export_structure($user) {
  $ret = array();
  $ret['id'] = $user->uid;
  $ret['uid'] = $user->uid;
  $ret['label'] = $user->name;
  $ret['name'] = $user->name;
  $ret['type'] = "User";
  if (isset($user->picture)) {
    if (isset($user->picture->uri)) {
      $ret['picture-uri'] = $user->picture->uri;
      $ret['picture-filename'] = $user->picture->filename;
    }
  }

  $ret['roles'] = array();
  foreach ($user->roles as $id => $name) {
    array_push($ret['roles'], $name);
  }

  $needle = "field_";
  foreach ($user as $key => $value) {
    // StartsWith
    if (!strncmp($key, $needle, strlen($needle))) {
      $dict = datapress_get_custom_field_value($value);
      $prefix = substr($key, 6);
      foreach ($dict as $customk => $customv) {
        $ret["custom-$prefix-$customk"] = $customv;
      }
    }
  }
  //$ret['user'] = $user;
  return $ret;
}

function datapress_get_custom_field_value($value) {
  $ret = array();
  $language = "und";
  if (isset($value[$language])) {
    foreach($value[$language] as $item) {
      $x = array();
      if (isset($item["value"])) {
        $x["value"] = $item["value"];
        array_push($ret, $x);
      } elseif (isset($item["filename"])) {
        $x["filename"] = $item["filename"];
        if (isset($item["uri"])) {
          // Override with URI if possible
          if (!(strpos($item["uri"], "//") === false)) {
            $x["filename"] = substr($item["uri"], strpos($item["uri"], "//") + 2);
          }
        }
        array_push($ret, $x);
      } elseif (isset($item["uid"])) {
        $user = user_load($item["uid"]);
        $x["name"] = $user->name;
        $x["uid"] = $user->uid;
        array_push($ret, $x);
      } elseif (isset($item["nid"])) {
        $node = node_load($item["nid"]);
        $x["name"] = $node->title;
        $x["nid"] = $node->nid;
        array_push($ret, $x);
      }
    }
  }
  
  if (sizeof($ret) == 1) {
    $ret = $ret[0];
  } elseif (sizeof($ret) == 0) {
    $ret = "";
  }
  return $ret;
}


//function datapress_library() {
//  $path = drupal_get_path('module', 'datapress');
//  $l/ibraries['datapress.lib'] = array(
//    'title' => 'Datapress',
//    'website' => 'http://projects.csail.mit.edu/datapress',
//    'version' => '1.1',
//    'js' => array(
//      "$path/datapress.js" => array(),
//    ),
//    'css' => array(
//      "$path/datapress.css" => array(
//        'type' => 'file',
//        'media' => 'screen',
//      ),
//    ),
//  );
//  return $libraries;
//}
//
//function datapress_init() {
////  drupal_add_library('datapress', 'datapress.lib');
//}
//
///**
// * Implements hook_help.
// *
// * Displays help and module information.
// *
// * @param path 
// *   Which path of the site we're using to display help
// * @param arg 
// *   Array that holds the current path as returned from arg() function
// */
//function datapress_help($path, $arg) {
//  switch ($path) {
//    case "admin/help#datapress":
//      return '<p>' . t("Helps facet objects.") . '</p>';
//      break;
//  }
//}
//
///**
// * Implements hook_block_info().
// */
//function datapress_block_info() {
//  $blocks['datapress'] = array(
//    'info' => t('Datapress'), //The name that will appear in the block list.
//    'cache' => DRUPAL_CACHE_PER_ROLE, //Default
//  );
//  return $blocks;
//}
//
//
///**
// * Datapress factet function
// * 
// * @return 
// *   The body of the facets for this page
// */
//function datapress_facets() {
//  return array();
//} 
//
///**
// * Displays the datapress block.
// */
//function datapress_block_view($delta = '') {
//  switch($delta) {
//    case 'current_posts':
//      $block['subject'] = t('Fiter Items');
//      if (user_access('access content')) {
//        //Use our custom function to retrieve data.
//
//        $facets = datapress_facets();
//
//        if (empty($facets)) { //No content in the last week.
//          $block['content'] = t('No filters available.');  
//        } 
//
//        ////Iterate over the resultset and format as links.
//        //foreach ($result as $node){
//        //  $items[] = array(
//        //    'data' => l($node->title, 'node/' . $node->nid),
//        //  ); 
//        //}
//      }
//  }
//  return $block;
//}
//
